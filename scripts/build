#!/bin/bash
set -e

HERE=$(dirname "$(readlink --canonicalize "$BASH_SOURCE")")
. "$HERE/_env"

cd "$ROOT"

# sudo dnf install clang
# cargo install wild-linker

BINDEPS=${BINDEPS:-false}

if [ "$1" == -r ]; then
    NATIVE=${NATIVE:-release}
    WASM=${WASM:-release}
	WASM_PRECOMPILE=${WASM_PRECOMPILE:-true}
	WASM_DEBUG_INFO=${WASM_DEBUG_INFO:-false}
else
    NATIVE=${NATIVE:-dev}
    WASM=${WASM:-dev}
	WASM_PRECOMPILE=${WASM_PRECOMPILE:-false}
	WASM_DEBUG_INFO=${WASM_DEBUG_INFO:-true}
fi

# We won't need this with bindeps
if [ "$BINDEPS" == false ]; then
    WASM=$WASM \
    "$HERE/build-wasm"
fi

if [ "$WASM_PRECOMPILE" == true ]; then
    NATIVE_FEATURES="$NATIVE_FEATURES --features=wasm-precompiled"
   	if [ "$WASM_DEBUG_INFO" == true ]; then
  		m "building ($NATIVE + cwasm with debug info)..." "$CYAN"
        NATIVE_FEATURES="$NATIVE_FEATURES --features=wasm-debug-info"
   	else
  		m "building ($NATIVE + cwasm)..." "$CYAN"
    fi
else
    m "building ($NATIVE + wasm)..." "$CYAN"
fi

if [ "$NATIVE" == release ]; then
	cargo install --path="$ROOT/cli" $NATIVE_FEATURES
else
    if [ "$BINDEPS" == true ]; then
        # wild can't link wasm (it's an artifact dependency)
        RUSTFLAGS='-Z threads=8' \
        cargo +nightly -Z bindeps install --path="$ROOT/cli" --debug --features=bindeps,floria/wasm_debug $NATIVE_FEATURES
    else
        RUSTFLAGS='-Z threads=8 --codegen linker=clang --codegen link-arg=--ld-path=wild' \
        cargo +nightly -Z bindeps install --path="$ROOT/cli" --debug --features=floria/wasm_debug $NATIVE_FEATURES
    fi
fi
