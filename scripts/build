#!/bin/bash
set -e

#
# Environment variables:
#
# NATIVE = release | dev
# Build profile for native code: puccini-tosca, puccini-csar
#
# WASM = release | dev
# Build profile for Wasm code: puccini_plugin_tosca_2_0_functions
#
# WASM_PRECOMPILE = true | false
# Whether to precompile Wasm code to native (.wasm to .cwasm)
#
# WASM_DEBUG_INFO = true | false
# Whether to include debug information in Wasm
# This affects *both* .wasm and .cwasm building
# *as well* as how the Wasm runtime defaults in native code
# Note that this *does* work when WASM=release even though the debug info is empty
#
# BINDEPS = true | false
# Experimental support for artifact dependencies:
# https://doc.rust-lang.org/nightly/cargo/reference/unstable.html#artifact-dependencies
# Currently only supported on NATIVE=dev

# sudo dnf install clang
# cargo install wild-linker

HERE=$(dirname "$(readlink --canonicalize "$BASH_SOURCE")")
. "$HERE/_env"

cd "$ROOT"

BINDEPS=${BINDEPS:-false}

if [ "$1" == -r ]; then
    NATIVE=${NATIVE:-release}
    WASM=${WASM:-release}
	WASM_PRECOMPILE=${WASM_PRECOMPILE:-true}
	WASM_DEBUG_INFO=${WASM_DEBUG_INFO:-false}
else
    NATIVE=${NATIVE:-dev}
    WASM=${WASM:-dev}
	WASM_PRECOMPILE=${WASM_PRECOMPILE:-true}
	WASM_DEBUG_INFO=${WASM_DEBUG_INFO:-true}
fi

# We won't need this with bindeps
if [ "$BINDEPS" == false ]; then
    WASM=$WASM \
    "$HERE/build-wasm"
fi

if [ "$WASM_PRECOMPILE" == true ]; then
    NATIVE_FEATURES="$NATIVE_FEATURES --features=wasm-precompiled"
   	if [ "$WASM_DEBUG_INFO" == true ]; then
  		m "building ($NATIVE + cwasm with debug info)..." "$CYAN"
        NATIVE_FEATURES="$NATIVE_FEATURES --features=wasm-debug-info"
   	else
  		m "building ($NATIVE + cwasm)..." "$CYAN"
    fi
else
    m "building ($NATIVE + wasm)..." "$CYAN"
fi

if [ "$NATIVE" == release ]; then
	cargo install --path="$ROOT/cli" $NATIVE_FEATURES
else
    if [ "$BINDEPS" == true ]; then
        NATIVE_FEATURES="$NATIVE_FEATURES --features=bindeps"

        # wild can't link wasm (same linker is used for artifact dependencies)
        export RUSTFLAGS='-Z threads=8'
    else
        export RUSTFLAGS='-Z threads=8 --codegen linker=clang --codegen link-arg=--ld-path=wild'
    fi

    cargo +nightly -Z bindeps install --path="$ROOT/cli" --debug --features=floria/wasm-debug $NATIVE_FEATURES
fi
